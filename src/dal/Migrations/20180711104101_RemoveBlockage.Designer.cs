// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using VRP.DAL.Database;

namespace VRP.DAL.Migrations
{
    [DbContext(typeof(RoleplayContext))]
    [Migration("20180711104101_RemoveBlockage")]
    partial class RemoveBlockage
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "2.1.0-rtm-30799")
                .HasAnnotation("Relational:MaxIdentifierLength", 64);

            modelBuilder.Entity("VRP.DAL.Database.Models.Account.AccountModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("AvatarUrl");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50);

                    b.Property<long>("ForumUserId");

                    b.Property<string>("ForumUserName");

                    b.Property<DateTime>("LastLogin");

                    b.Property<string>("PasswordHash");

                    b.Property<string>("PasswordSalt");

                    b.Property<long>("PrimaryForumGroup");

                    b.Property<string>("SecondaryForumGroups");

                    b.Property<int>("ServerRank");

                    b.Property<string>("SocialClub")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasAlternateKey("Email", "ForumUserId", "Id");

                    b.ToTable("Accounts");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Account.PenaltyModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<int>("CharacterId");

                    b.Property<int?>("CreatorId");

                    b.Property<DateTime>("Date");

                    b.Property<DateTime>("ExpiryDate");

                    b.Property<int>("PenaltyType");

                    b.Property<string>("Reason")
                        .HasMaxLength(256);

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("CreatorId");

                    b.ToTable("Penaltlies");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Account.SerialModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<string>("GameSerial");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("SerialModel");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Agreement.AgreementModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<bool>("AutoRenewal");

                    b.Property<DateTime>("End");

                    b.Property<int?>("LeaserCharacterId");

                    b.Property<int?>("LeaserGroupId");

                    b.Property<DateTime>("Start");

                    b.HasKey("Id");

                    b.HasIndex("LeaserCharacterId");

                    b.HasIndex("LeaserGroupId");

                    b.ToTable("Agreements");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Agreement.LeaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AgreementId");

                    b.Property<int>("BuildingId");

                    b.Property<TimeSpan>("ChargeFrequency");

                    b.Property<decimal>("Cost");

                    b.Property<int>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("AgreementId")
                        .IsUnique();

                    b.HasIndex("BuildingId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Leases");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Bot.BotModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatorId");

                    b.Property<string>("Name");

                    b.Property<uint>("PedHash");

                    b.HasKey("Id");

                    b.ToTable("BotModel");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Building.BuildingModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AutoSaleId");

                    b.Property<int?>("CharacterId");

                    b.Property<int?>("CreatorId");

                    b.Property<short>("CurrentObjectCount");

                    b.Property<string>("Description");

                    b.Property<decimal?>("EnterCharge");

                    b.Property<float>("ExternalPickupPositionX");

                    b.Property<float>("ExternalPickupPositionY");

                    b.Property<float>("ExternalPickupPositionZ");

                    b.Property<int?>("GroupId");

                    b.Property<bool>("HasCctv");

                    b.Property<bool>("HasSafe");

                    b.Property<uint>("InternalDimension");

                    b.Property<float>("InternalPickupPositionX");

                    b.Property<float>("InternalPickupPositionY");

                    b.Property<float>("InternalPickupPositionZ");

                    b.Property<short>("MaxObjectCount");

                    b.Property<string>("Name");

                    b.Property<bool>("SpawnPossible");

                    b.HasKey("Id");

                    b.HasIndex("AutoSaleId")
                        .IsUnique();

                    b.HasIndex("CharacterId");

                    b.HasIndex("GroupId");

                    b.ToTable("Buildings");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Character.CharacterLookModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<byte?>("AccessoryId");

                    b.Property<byte?>("AccessoryTexture");

                    b.Property<int>("CharacterId");

                    b.Property<byte?>("EarsId");

                    b.Property<byte?>("EarsTexture");

                    b.Property<float?>("EyeBrowsOpacity");

                    b.Property<byte?>("EyebrowsId");

                    b.Property<byte?>("FatherId");

                    b.Property<byte?>("FirstEyebrowsColor");

                    b.Property<byte?>("FirstLipstickColor");

                    b.Property<byte?>("FirstMakeupColor");

                    b.Property<byte?>("GlassesId");

                    b.Property<byte?>("GlassesTexture");

                    b.Property<byte?>("HairColor");

                    b.Property<byte?>("HairId");

                    b.Property<byte?>("HairTexture");

                    b.Property<byte?>("HatId");

                    b.Property<byte?>("HatTexture");

                    b.Property<byte?>("LegsId");

                    b.Property<byte?>("LegsTexture");

                    b.Property<float?>("LipstickOpacity");

                    b.Property<byte?>("MakeupId");

                    b.Property<float?>("MakeupOpacity");

                    b.Property<byte?>("MotherId");

                    b.Property<byte?>("SecondEyebrowsColor");

                    b.Property<byte?>("SecondLipstickColor");

                    b.Property<byte?>("SecondMakeupColor");

                    b.Property<float?>("ShapeMix");

                    b.Property<byte?>("ShoesId");

                    b.Property<byte?>("ShoesTexture");

                    b.Property<byte?>("TopId");

                    b.Property<byte?>("TopTexture");

                    b.Property<byte?>("TorsoId");

                    b.Property<byte?>("UndershirtId");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.ToTable("CharacterLooks");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Character.CharacterModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AccountId");

                    b.Property<int?>("BankAccountNumber");

                    b.Property<decimal?>("BankMoney");

                    b.Property<DateTime?>("BornDate");

                    b.Property<int>("CharacterLookId");

                    b.Property<DateTime>("CreateTime");

                    b.Property<uint>("CurrentDimension");

                    b.Property<bool>("Gender");

                    b.Property<bool>("HasDrivingLicense");

                    b.Property<bool>("HasIdCard");

                    b.Property<byte>("Health");

                    b.Property<bool>("IsAlive");

                    b.Property<DateTime>("LastLoginTime");

                    b.Property<float>("LastPositionX");

                    b.Property<float>("LastPositionY");

                    b.Property<float>("LastPositionZ");

                    b.Property<float>("LastRotationX");

                    b.Property<float>("LastRotationY");

                    b.Property<float>("LastRotationZ");

                    b.Property<int>("MinutesToRespawn");

                    b.Property<string>("Model");

                    b.Property<decimal>("Money");

                    b.Property<string>("Name");

                    b.Property<bool>("Online");

                    b.Property<int>("PartTimeJobWorkerId");

                    b.Property<TimeSpan>("PlayedTime");

                    b.Property<string>("Surname");

                    b.Property<TimeSpan>("TodayPlayedTime");

                    b.HasKey("Id");

                    b.HasIndex("AccountId");

                    b.ToTable("Characters");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.CrimeBot.CrimeBotItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<int>("Count");

                    b.Property<int?>("CrimeBotModelId");

                    b.Property<int?>("ItemTemplateModelId");

                    b.Property<int>("ResetCount");

                    b.HasKey("Id");

                    b.HasIndex("CrimeBotModelId");

                    b.HasIndex("ItemTemplateModelId");

                    b.ToTable("CrimeBotItems");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.CrimeBot.CrimeBotModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BotModelId");

                    b.Property<int>("CreatorId");

                    b.Property<int?>("GroupModelId");

                    b.Property<string>("VehicleModel");

                    b.HasKey("Id");

                    b.HasIndex("BotModelId");

                    b.HasIndex("GroupModelId");

                    b.ToTable("CrimeBots");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Group.GroupModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BossCharacterId");

                    b.Property<string>("Color");

                    b.Property<int>("Dotation");

                    b.Property<int>("GroupType");

                    b.Property<int>("MaxPayday");

                    b.Property<decimal>("Money");

                    b.Property<string>("Name");

                    b.Property<string>("Tag");

                    b.HasKey("Id");

                    b.HasIndex("BossCharacterId");

                    b.ToTable("Groups");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Group.WorkerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterId");

                    b.Property<int>("DutyMinutes");

                    b.Property<int?>("GroupId");

                    b.Property<int>("Rights");

                    b.Property<decimal>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("GroupId");

                    b.ToTable("Workers");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Item.ItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("BuildingId");

                    b.Property<int?>("CharacterId");

                    b.Property<int?>("CreatorId");

                    b.Property<int?>("FirstParameter");

                    b.Property<int?>("FourthParameter");

                    b.Property<int>("ItemEntityType");

                    b.Property<string>("ItemHash");

                    b.Property<string>("Name");

                    b.Property<int?>("OwnerVehicleId");

                    b.Property<int?>("SecondParameter");

                    b.Property<int?>("ThirdParameter");

                    b.Property<int?>("TuningInVehicleId");

                    b.Property<short>("Weight");

                    b.HasKey("Id");

                    b.HasIndex("BuildingId");

                    b.HasIndex("CharacterId");

                    b.HasIndex("OwnerVehicleId");

                    b.HasIndex("TuningInVehicleId");

                    b.ToTable("Items");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Item.ItemTemplateModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("FirstParameter");

                    b.Property<int?>("FourthParameter");

                    b.Property<int>("ItemEntityType");

                    b.Property<string>("ItemHash");

                    b.Property<string>("Name");

                    b.Property<int?>("SecondParameter");

                    b.Property<int?>("ThirdParameter");

                    b.Property<short>("Weight");

                    b.HasKey("Id");

                    b.ToTable("ItemTemplates");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.CharacterRecordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Address");

                    b.Property<DateTime>("BornDate");

                    b.Property<Guid>("DNACode");

                    b.Property<string>("EyeColor")
                        .IsRequired()
                        .HasConversion(new ValueConverter<string, string>(v => default(string), v => default(string), new ConverterMappingHints(size: 1)));

                    b.Property<string>("FingerPrints");

                    b.Property<bool>("Gender");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Name");

                    b.Property<int>("Race");

                    b.Property<string>("Surname");

                    b.Property<bool>("Wanted");

                    b.HasKey("Id");

                    b.ToTable("CharacterRecords");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.CriminalCaseCharacterRecordRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterRecordId");

                    b.Property<int?>("CriminalCaseId");

                    b.HasKey("Id");

                    b.HasIndex("CharacterRecordId");

                    b.HasIndex("CriminalCaseId");

                    b.ToTable("CriminalCaseCharacterRecordRelations");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.CriminalCaseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Description");

                    b.HasKey("Id");

                    b.ToTable("CriminalCases");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.CriminalCaseVehicleRecordRelation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CriminalCaseId");

                    b.Property<int?>("VehicleRecordId");

                    b.HasKey("Id");

                    b.HasIndex("CriminalCaseId");

                    b.HasIndex("VehicleRecordId");

                    b.ToTable("CriminalCaseVehicleRecordRelations");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.VehicleRecordModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Color");

                    b.Property<byte[]>("Image");

                    b.Property<string>("Model");

                    b.Property<string>("NumberPlate");

                    b.Property<int?>("OwnerId");

                    b.Property<string>("SpecialFeatures");

                    b.Property<bool>("Towed");

                    b.Property<bool>("Wanted");

                    b.HasKey("Id");

                    b.HasIndex("OwnerId");

                    b.ToTable("VehicleRecordModels");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Misc.AutoSaleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.HasKey("Id");

                    b.ToTable("AutoSales");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Misc.DescriptionModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CharacterId");

                    b.Property<string>("Content");

                    b.Property<string>("Title");

                    b.Property<int?>("VehicleId");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId");

                    b.HasIndex("VehicleId");

                    b.ToTable("Descriptions");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Misc.ZoneModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CreatorId");

                    b.Property<uint>("Dimension");

                    b.Property<string>("Name");

                    b.Property<string>("ZonePropertiesJson");

                    b.Property<int>("ZoneType");

                    b.HasKey("Id");

                    b.ToTable("Zones");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobEmployerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<string>("Name");

                    b.Property<int>("PartTimeJobId");

                    b.Property<int?>("PartTimeJobModelId");

                    b.Property<float>("PositionX");

                    b.Property<float>("PositionY");

                    b.Property<float>("PositionZ");

                    b.Property<float>("RotationX");

                    b.Property<float>("RotationY");

                    b.Property<float>("RotationZ");

                    b.HasKey("Id");

                    b.HasIndex("PartTimeJobModelId");

                    b.ToTable("PartTimeJobEmployerModel");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("DailyMoneyLimit");

                    b.Property<int>("JobType");

                    b.HasKey("Id");

                    b.ToTable("PartTimeJobModel");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobWorkerModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("CharacterId");

                    b.Property<int>("PartTimeJobEmployerId");

                    b.Property<int?>("PartTimeJobEmployerModelId");

                    b.Property<decimal>("Salary");

                    b.HasKey("Id");

                    b.HasIndex("CharacterId")
                        .IsUnique();

                    b.HasIndex("PartTimeJobEmployerModelId");

                    b.ToTable("PartTimeJobWorkerModel");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Telephone.TelephoneContactModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CellphoneId");

                    b.Property<string>("Name");

                    b.Property<int>("Number");

                    b.HasKey("Id");

                    b.HasIndex("CellphoneId");

                    b.ToTable("TelephoneContacts");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Telephone.TelephoneMessageModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("CellphoneId");

                    b.Property<string>("Content")
                        .HasMaxLength(256);

                    b.Property<int>("SenderNumber");

                    b.HasKey("Id");

                    b.HasIndex("CellphoneId");

                    b.ToTable("TelephoneMessages");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Vehicle.VehicleModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int>("AutoSaleId");

                    b.Property<int?>("CharacterId");

                    b.Property<int?>("CreatorId");

                    b.Property<bool>("Door1Damage");

                    b.Property<bool>("Door2Damage");

                    b.Property<bool>("Door3Damage");

                    b.Property<bool>("Door4Damage");

                    b.Property<float>("EnginePowerMultiplier");

                    b.Property<float>("EngineTorqueMultiplier");

                    b.Property<float>("Fuel");

                    b.Property<float>("FuelConsumption");

                    b.Property<float>("FuelTank");

                    b.Property<int?>("GroupId");

                    b.Property<float>("Health");

                    b.Property<bool>("IsSpawned");

                    b.Property<float>("Milage");

                    b.Property<string>("Name");

                    b.Property<string>("NumberPlate");

                    b.Property<int>("NumberPlateStyle");

                    b.Property<int?>("PartTimeJobModelId");

                    b.Property<string>("PrimaryColor");

                    b.Property<string>("SecondaryColor");

                    b.Property<float>("SpawnPositionX");

                    b.Property<float>("SpawnPositionY");

                    b.Property<float>("SpawnPositionZ");

                    b.Property<float>("SpawnRotationX");

                    b.Property<float>("SpawnRotationY");

                    b.Property<float>("SpawnRotationZ");

                    b.Property<string>("VehicleHash");

                    b.Property<int>("WheelColor");

                    b.Property<int>("WheelType");

                    b.Property<bool>("Window1Damage");

                    b.Property<bool>("Window2Damage");

                    b.Property<bool>("Window3Damage");

                    b.Property<bool>("Window4Damage");

                    b.HasKey("Id");

                    b.HasIndex("AutoSaleId")
                        .IsUnique();

                    b.HasIndex("CharacterId");

                    b.HasIndex("GroupId");

                    b.HasIndex("PartTimeJobModelId");

                    b.ToTable("Vehicles");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Warehouse.GroupWarehouseItemModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<decimal>("Cost");

                    b.Property<int>("Count");

                    b.Property<int>("GroupType");

                    b.Property<int?>("GroupWarehouseModelId");

                    b.Property<int?>("ItemTemplateModelId");

                    b.Property<int>("ResetCount");

                    b.HasKey("Id");

                    b.HasIndex("GroupWarehouseModelId");

                    b.HasIndex("ItemTemplateModelId");

                    b.ToTable("GroupWarehouseItems");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Warehouse.GroupWarehouseModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GroupId");

                    b.HasKey("Id");

                    b.HasIndex("GroupId");

                    b.ToTable("GroupWarehouses");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Warehouse.GroupWarehouseOrderModel", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd();

                    b.Property<int?>("GetterId");

                    b.Property<int>("OrderedItemCount");

                    b.Property<int?>("OrderedItemTemplateId");

                    b.Property<string>("ShipmentLog");

                    b.HasKey("Id");

                    b.HasIndex("GetterId");

                    b.HasIndex("OrderedItemTemplateId");

                    b.ToTable("GroupWarehouseOrders");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Account.PenaltyModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Account.AccountModel", "Account")
                        .WithMany("Penalties")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithMany()
                        .HasForeignKey("CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.Account.AccountModel", "Creator")
                        .WithMany()
                        .HasForeignKey("CreatorId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Account.SerialModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Account.AccountModel", "AccountModel")
                        .WithMany("Serials")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Agreement.AgreementModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "LeaserCharacter")
                        .WithMany("Agreements")
                        .HasForeignKey("LeaserCharacterId");

                    b.HasOne("VRP.DAL.Database.Models.Group.GroupModel", "LeaserGroup")
                        .WithMany("Agreements")
                        .HasForeignKey("LeaserGroupId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Agreement.LeaseModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Agreement.AgreementModel", "Agreement")
                        .WithOne("LeaseModel")
                        .HasForeignKey("VRP.DAL.Database.Models.Agreement.LeaseModel", "AgreementId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.Building.BuildingModel", "Building")
                        .WithMany()
                        .HasForeignKey("BuildingId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.Vehicle.VehicleModel", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Building.BuildingModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Misc.AutoSaleModel", "AutoSaleModel")
                        .WithOne("BuildingModel")
                        .HasForeignKey("VRP.DAL.Database.Models.Building.BuildingModel", "AutoSaleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithMany("Buildings")
                        .HasForeignKey("CharacterId");

                    b.HasOne("VRP.DAL.Database.Models.Group.GroupModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Character.CharacterLookModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithOne("CharacterLook")
                        .HasForeignKey("VRP.DAL.Database.Models.Character.CharacterLookModel", "CharacterId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Character.CharacterModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Account.AccountModel", "Account")
                        .WithMany("Characters")
                        .HasForeignKey("AccountId")
                        .OnDelete(DeleteBehavior.Cascade);
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.CrimeBot.CrimeBotItemModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.CrimeBot.CrimeBotModel")
                        .WithMany("CrimeBotItems")
                        .HasForeignKey("CrimeBotModelId");

                    b.HasOne("VRP.DAL.Database.Models.Item.ItemTemplateModel", "ItemTemplateModel")
                        .WithMany()
                        .HasForeignKey("ItemTemplateModelId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.CrimeBot.CrimeBotModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Bot.BotModel", "BotModel")
                        .WithMany()
                        .HasForeignKey("BotModelId");

                    b.HasOne("VRP.DAL.Database.Models.Group.GroupModel", "GroupModel")
                        .WithMany()
                        .HasForeignKey("GroupModelId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Group.GroupModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "BossCharacter")
                        .WithMany()
                        .HasForeignKey("BossCharacterId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Group.WorkerModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithMany("Workers")
                        .HasForeignKey("CharacterId");

                    b.HasOne("VRP.DAL.Database.Models.Group.GroupModel", "Group")
                        .WithMany("Workers")
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Item.ItemModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Building.BuildingModel", "Building")
                        .WithMany("ItemsInBuilding")
                        .HasForeignKey("BuildingId");

                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithMany("Items")
                        .HasForeignKey("CharacterId");

                    b.HasOne("VRP.DAL.Database.Models.Vehicle.VehicleModel", "OwnerVehicle")
                        .WithMany("ItemsInVehicle")
                        .HasForeignKey("OwnerVehicleId");

                    b.HasOne("VRP.DAL.Database.Models.Vehicle.VehicleModel", "TuningInVehicle")
                        .WithMany("VehicleTuning")
                        .HasForeignKey("TuningInVehicleId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.CriminalCaseCharacterRecordRelation", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Mdt.CharacterRecordModel", "CharacterRecord")
                        .WithMany("CriminalCases")
                        .HasForeignKey("CharacterRecordId");

                    b.HasOne("VRP.DAL.Database.Models.Mdt.CriminalCaseModel", "CriminalCase")
                        .WithMany("InvolvedPeople")
                        .HasForeignKey("CriminalCaseId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.CriminalCaseVehicleRecordRelation", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Mdt.CriminalCaseModel", "CriminalCase")
                        .WithMany("InvolvedVehicles")
                        .HasForeignKey("CriminalCaseId");

                    b.HasOne("VRP.DAL.Database.Models.Mdt.VehicleRecordModel", "VehicleRecord")
                        .WithMany("CriminalCases")
                        .HasForeignKey("VehicleRecordId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Mdt.VehicleRecordModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Mdt.CharacterRecordModel", "Owner")
                        .WithMany("Vehicles")
                        .HasForeignKey("OwnerId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Misc.DescriptionModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithMany("Descriptions")
                        .HasForeignKey("CharacterId");

                    b.HasOne("VRP.DAL.Database.Models.Vehicle.VehicleModel", "Vehicle")
                        .WithMany()
                        .HasForeignKey("VehicleId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobEmployerModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobModel", "PartTimeJobModel")
                        .WithMany("Employers")
                        .HasForeignKey("PartTimeJobModelId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobWorkerModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithOne("PartTimeJobWorkerModel")
                        .HasForeignKey("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobWorkerModel", "CharacterId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobEmployerModel", "PartTimeJobEmployerModel")
                        .WithMany("Workers")
                        .HasForeignKey("PartTimeJobEmployerModelId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Telephone.TelephoneContactModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Item.ItemModel", "Cellphone")
                        .WithMany()
                        .HasForeignKey("CellphoneId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Telephone.TelephoneMessageModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Item.ItemModel", "Cellphone")
                        .WithMany()
                        .HasForeignKey("CellphoneId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Vehicle.VehicleModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Misc.AutoSaleModel", "AutoSaleModel")
                        .WithOne("VehicleModel")
                        .HasForeignKey("VRP.DAL.Database.Models.Vehicle.VehicleModel", "AutoSaleId")
                        .OnDelete(DeleteBehavior.Cascade);

                    b.HasOne("VRP.DAL.Database.Models.Character.CharacterModel", "Character")
                        .WithMany("Vehicles")
                        .HasForeignKey("CharacterId");

                    b.HasOne("VRP.DAL.Database.Models.Group.GroupModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");

                    b.HasOne("VRP.DAL.Database.Models.PartTimeJob.PartTimeJobModel")
                        .WithMany("Vehicles")
                        .HasForeignKey("PartTimeJobModelId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Warehouse.GroupWarehouseItemModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Warehouse.GroupWarehouseModel", "GroupWarehouseModel")
                        .WithMany("ItemsInWarehouse")
                        .HasForeignKey("GroupWarehouseModelId");

                    b.HasOne("VRP.DAL.Database.Models.Item.ItemTemplateModel", "ItemTemplateModel")
                        .WithMany()
                        .HasForeignKey("ItemTemplateModelId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Warehouse.GroupWarehouseModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Group.GroupModel", "Group")
                        .WithMany()
                        .HasForeignKey("GroupId");
                });

            modelBuilder.Entity("VRP.DAL.Database.Models.Warehouse.GroupWarehouseOrderModel", b =>
                {
                    b.HasOne("VRP.DAL.Database.Models.Warehouse.GroupWarehouseModel", "Getter")
                        .WithMany()
                        .HasForeignKey("GetterId");

                    b.HasOne("VRP.DAL.Database.Models.Item.ItemTemplateModel", "OrderedItemTemplate")
                        .WithMany()
                        .HasForeignKey("OrderedItemTemplateId");
                });
#pragma warning restore 612, 618
        }
    }
}
